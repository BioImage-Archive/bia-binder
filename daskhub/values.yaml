# DaskHub configuration values
# ----------------------------
rbac:
  enabled: true  # Create and use roles and service accounts on an RBAC-enabled cluster.

jupyterhub:
  nameOverride: dask
  fullnameOverride: dask
  proxy:
    service:
      type: ClusterIP
  ingress:
    enabled: true
    hosts:
    - login.binder.bioimagearchive.org
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 2m
  # JupyterHub configuration goes here.
  # See https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/master/jupyterhub/values.yaml
  hub:
    services:
      dask-gateway:
        display: false

    # extraConfig:
      # Register Dask Gateway service and setup singleuser environment.
  singleuser:
    image:
      name: pangeo/base-notebook  # Image to use for singleuser environment. Must include dask-gateway.
      tag: "2023.02.27"
    defaultUrl: "/lab"  # Use jupyterlab by defualt.
    extraEnv:
      GRANT_SUDO: "yes"
      JUPYTERHUB_SINGLEUSER_APP: "jupyterhub.singleuserapp.SingleUserNotebookApp"
      NOTEBOOK_ARGS: "--allow-root"
    cpu:
      limit: 4
      guarantee: 2
    memory:
      limit: 8G
      guarantee: 6G

dask-gateway:
  enabled: true  # Enabling dask-gateway will install Dask Gateway as a dependency.
  # Futher Dask Gateway configuration goes here
  # See https://github.com/dask/dask-gateway/blob/master/resources/helm/dask-gateway/values.yaml
  gateway:
    prefix: "/services/dask-gateway"  # Users connect to the Gateway through the JupyterHub service.
    auth:
      type: jupyterhub  # Use JupyterHub to authenticate with Dask Gateway
  traefik:
    service:
      type: ClusterIP  # Access Dask Gateway through JupyterHub. To access the Gateway from outside JupyterHub, this must be changed to a `LoadBalancer`.

dask-kubernetes:
  # Use dask-kubernetes, rather than Dask Gateway, for creating Dask Clusters.
  # Enabling this also requires
  # 1. Setting `jupyterhub.singleuser.serviceAccountName: daskkubernetes`.
  # 2. Ensuring that `dask-kubernetes` is in your singleuser environment.
  enabled: false