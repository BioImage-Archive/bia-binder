proxy:
  secretToken: "$SECRET_JUPYTERHUB_PROXY_TOKEN"
hub:
  extraConfig:
    volume.py: |
      def profile_pvc(spawner):
          profile = spawner.user_options.get("profile", "")
          if profile in ["Biostudies"]:
              spawner.volumes.extend([
                  {
                      "name": "biostudies-nfs",
                      "persistentVolumeClaim": {"claimName": "biostudies-nfs-pvc"}
                  }
              ])
              spawner.volume_mounts.extend([
                  {
                      "mountPath": "/home/jovyan/biostudies",
                      "name": "biostudies-nfs"
                  }
              ])
      c.KubeSpawner.pre_spawn_hook = profile_pvc
  baseUrl: /github
  # services:
  #   dask-gateway:
  #     apiToken: ""
  # db:
  #   type: sqlite-pvc
  #   pvc:
  #     storageClassName: gluster
  # extraConfig:
  #   config: |
  #     c.JupyterHub.cleanup_servers = False


# auth:
#   admin:
#     access: true
#     users:
#       - ctr26

#   type: github
#   github:
#     org_whitelist:
#       - "bioimagearchive"
#     orgWhitelist:
#       - "bioimagearchive"
#   scopes:
#     - "read:org"

cull:
  timeout: 3600
  every: 600

singleuser:
  cmd: "start-singleuser.sh"
  lifecycleHooks:
    postStart:
      exec:
        command:
          - "sh"
          - "-c"
          - >
            sudo apt update && sudo apt-get -y install fuse libfuse-dev libfuse2 coreutils curl rclone && mamba install nb_conda_kernels --yes
  extraEnv:
    GRANT_SUDO: "yes"
    NOTEBOOK_ARGS: "--allow-root"
  uid: 0
  defaultUrl: "/lab"
  storage:
    capacity: 128G
    extraVolumes:
      - name: shm-volume
        emptyDir:
          medium: Memory
      # - name: biostudies-nfs
      #   persistentVolumeClaim:
      #     claimName: biostudies-nfs-pvc
      # - name: biostudies-nfs-dropbox
      #   persistentVolumeClaim:
      #     claimName: biostudies-nfs-pvc-dropbox
    extraVolumeMounts:
      - name: shm-volume
        mountPath: /dev/shm
      # - name: biostudies-nfs
        # mountPath: /home/jovyan/biostudies
        # readOnly: true
      # - name: biostudies-nfs-dropbox
      #   mountPath: /home/jovyan/biostudies-dropbox
      #   readOnly: true
  memory:
    limit: 64G
    guarantee: 8G
  cpu:
    limit: 4
    guarantee: 2
  # lifecycleHooks:
  # postStart:
    # exec:
      # command: ["cp", "-a", "src", "target"]
  # lifecycle_hooks:
  #   postStart:
  #     exec:
  #       command:
  #         [
  #           "sh",
  #           "-c",
  #           "mamba install nb_conda_kernels --yes",
  #         ]
  profileList:
    - display_name: "Minimal"
      description: "Spawns a notebook server with 1G ram and 1 CPU core"
      kubespawner_override:
        cpu_limit: 4
        cpu_guarantee: 1
        mem_limit: 2G
        mem_guarantee: 1G
    - display_name: "8GB - 2 core"
      description: "Spawns a notebook server with 8G ram and 2 CPU cores"
      kubespawner_override:
        cpu_limit: 4
        cpu_guarantee: 2
        mem_limit: 16G
        mem_guarantee: 8G
    - display_name: "16GB - 4 core"
      description: "Spawns a notebook server with 16G ram and 4 CPU cores"
      kubespawner_override:
        cpu_limit: 8
        cpu_guarantee: 4
        mem_limit: 16G
        mem_guarantee: 16G
    - display_name: "16GB - 4 core - GPU"
      description: "Spawns a notebook server with 16G ram and 4 CPU cores + GPU"
      kubespawner_override:
        # image: cschranz/gpu-jupyter
        cpu_limit: 8
        cpu_guarantee: 4
        mem_limit: 16G
        mem_guarantee: 16G
        extra_resource_limits:
          nvidia.com/gpu: "1"
    - display_name: "32GB - 8 core - 2 GPU"
      description: "Spawns a notebook server with 16G ram and 4 CPU cores + 2GPU"
      kubespawner_override:
        # image: cschranz/gpu-jupyter
        cpu_limit: 16
        cpu_guarantee: 8
        mem_limit: 32G
        mem_guarantee: 16G
        extra_resource_limits:
          nvidia.com/gpu: "2"
    - display_name: "32GB - 16 core - 2 GPU"
      description: "Spawns a notebook server with 32G ram and 16 CPU cores + 2GPU"
      kubespawner_override:
        # image: cschranz/gpu-jupyter
        cpu_limit: 32
        cpu_guarantee: 16
        mem_limit: 32G
        mem_guarantee: 32G
        extra_resource_limits:
          nvidia.com/gpu: "2"
    - display_name: "32GB - 16 core - 4 GPU"
      description: "Spawns a notebook server with 32G ram and 16 CPU cores + 4GPU"
      kubespawner_override:
        # image: cschranz/gpu-jupyter
        cpu_limit: 32
        cpu_guarantee: 16
        mem_limit: 32G
        mem_guarantee: 32G
        extra_resource_limits:
          nvidia.com/gpu: "4"
    - display_name: "64GB - 16 core - 4 GPU"
      description: "Spawns a notebook server with 64G ram and 16 CPU cores + 4GPU"
      kubespawner_override:
        # image: cschranz/gpu-jupyter
        cpu_limit: 32
        cpu_guarantee: 16
        mem_limit: 64G
        mem_guarantee: 64G
        extra_resource_limits:
          nvidia.com/gpu: "4"
    - display_name: "BioStudies"
      description: "Spawns a notebook server BioStudies attached"
      slug: "Biostudies"
      kubespawner_override:
        # image: cschranz/gpu-jupyter
        cpu_limit: 32
        cpu_guarantee: 16
        mem_limit: 32G
        mem_guarantee: 32G
        # volume_mounts:
        #   - name: biostudies-nfs
        #     mountPath: /home/jovyan/biostudies
        storage:
          # type: none
          extraVolumes:
            - name: biostudies-nfs
              persistentVolumeClaim:
                claimName: biostudies-nfs-pvc
          extraVolumeMounts:
            - name: biostudies-nfs
              mountPath: /home/jovyan/biostudies
              readOnly: true
    # - display_name: "32GB - 32 core - 3 GPU"
    #   description: "Spawns a notebook server with 32G ram and 32 CPU cores + 4GPU"
    #   kubespawner_override:
    #     # image: cschranz/gpu-jupyter
    #     cpu_limit: 32
    #     cpu_guarantee: 16
    #     mem_limit: 32G
    #     mem_guarantee: 32G
    #     extra_resource_limits:
    #       nvidia.com/gpu: "3"
    # - display_name: "32GB - 4 core - GPU"
    #   description: "Spawns a notebook server with 8G ram and 4 CPU cores + GPU"
    #   kubespawner_override:
    #     image: cschranz/gpu-jupyter
    #     cpu_limit: 8
    #     cpu_guarantee: 4
    #     mem_limit: 48G
    #     mem_guarantee: 32G
    #     extra_resource_limits:
    #       nvidia.com/gpu: "1"
    # - http://45.86.170.228/
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   nginx.ingress.kubernetes.io/proxy-body-size: 16m
  #   nginx.ingress.kubernetes.io/proxy-read-timeout: 3600
  #   nginx.ingress.kubernetes.io/proxy-send-timeout: 3600
