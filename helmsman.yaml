metadata:
  organization: EBI
  maintainer: Craig Russell (ctr26@ebi.ac.uk)
  description: EBI hub deployment

helmRepos:
  jupyterhub: "https://jupyterhub.github.io/helm-chart/"
  # daskgateway: "https://dask.org/dask-gateway-helm-repo/"
  dask: "https://helm.dask.org/"
  jetstack: "https://charts.jetstack.io"
  persistent_binderhub: "https://gesiscss.github.io/persistent_binderhub"
  nginx-stable: "https://helm.nginx.com/stable"
  ingress-nginx: "https://kubernetes.github.io/ingress-nginx"
  trow: "https://trow.io"
  twuni: "https://helm.twun.io"
  triton: "https://ctr26.github.io/tritoninferenceserver/"
  # prometheus-community: "https://prometheus-community.github.io/helm-charts"
  # kube-state-metrics: "https://kubernetes.github.io/kube-state-metrics"
  nvdp: "https://nvidia.github.io/k8s-device-plugin"
  nvidia: "https://nvidia.github.io/gpu-operator"
  getindata: "https://getindata.github.io/helm-charts/"

appsTemplates:
  binderhub: &binderhub
    name: "binderhub"
    chart: "jupyterhub/binderhub"
    version: "1.0.0-0.dev.git.3035.h32213a4"
    priority: -8
    wait: false # Lethal for binderhub
    timeout: 180
    enabled: false
    hooks:
      postUpgrade: "fuser/fuser.yml"
      postInstall: "fuser/fuser.yml"
    set:
      jupyterhub.hub.services.binder.apiToken: "$SECRET_JUPYTERHUB_PROXY_TOKEN"
      jupyterhub.proxy.secretToken: "$SECRET_BINDERHUB_SERVICE"
      config.DockerRegistry.token_url: ""
      config.BinderHub.image_prefix: "registry.binder.bioimagearchive.org/"
      registry.url: https://registry.binder.bioimagearchive.org
      config.BinderHub.use_registry: true



apps:



  trow:
    name: "trow"
    namespace: "trow"
    chart: "trow/trow"
    enabled: false
    version: "0.3.3"
    valuesFiles:
    - trow/values.yaml

  nvidia-device-plugin:
    name: "nvidia-device-plugin"
    namespace: "nvidia-device-plugin"
    chart: "nvdp/nvidia-device-plugin"
    group: "prod"
    enabled: false
    version: "0.10.0"

  docker-registry:
    name: "docker-registry"
    namespace: "docker-registry"
    chart: "twuni/docker-registry"
    group: "prod"
    enabled: true
    priority: -3
    version: "2.1.0"
    set:
      proxy:enabled: true
      # proxy.username: "$CI_REGISTRY_USER"
      # proxy.password: "$CI_REGISTRY_PASSWORD"
    valuesFiles:
    - docker-registry/values.yaml

  ingress-nginx:
    name: "ingress-nginx"
    namespace: "ingress-nginx"
    chart: "ingress-nginx/ingress-nginx"
    group: "prod"
    enabled: true
    priority: -100
    version: "4.6.0"
    valuesFiles:
    - ingress/nginx-ingress.yaml

  jupyterhub:
    name: "jupyterhub"
    chart: "jupyterhub/jupyterhub"
    version: "2.0.0"
    group: "prod"
    namespace: "prod"
    helmFlags:
    - "--debug"
    wait: false
    timeout: 1200
    enabled: false
    priority: -11
    set:
      proxy.secretToken: "$SECRET_JUPYTERHUB_PROXY_TOKEN"
    valuesFiles:
    - "jupyterhub/values.yaml"

  daskhub:
    chart: "dask/daskhub"
    version: "2023.1.0"
    group: "prod"
    namespace: "prod"
    enabled: true
    wait: true
    priority: -10
    timeout: 600
    set:
      jupyterhub.proxy.secretToken: "$SECRET_JUPYTERHUB_PROXY_TOKEN"
    valuesFiles:
    - "daskhub/values.yaml"

  binderhub:
    !!merge <<: *binderhub
    name: "binderhub"
    enabled: true
    priority: -17
    namespace: "prod"
    group: "prod"
    # protected: false
    valuesFiles:
    - "binderhub/values.yaml"


  binderhub-gpu:
    !!merge <<: *binderhub
    enabled: false
    name: "binderhub-gpu"
    namespace: "prod"
    group: "prod"
    valuesFiles:
    - "binderhub/values.yaml"

  cert-manager:
    name: "cert-manager"
    chart: "jetstack/cert-manager"
    enabled: true
    priority: 0
    # timeout: 120
    version: "v1.7.2"
    wait: true
    group: "prod"
    timeout: 240
    namespace: "cert-manager"
    set:
      installCRDs: true
      ingressShim.defaultIssuerKind: "ClusterIssuer"
      ingressShim.defaultIssuerName: "letsencrypt-prod"
    hooks:
      postUpgrade: "cert-managment/cluster_issuer.yaml"
      postInstall: "cert-managment/cluster_issuer.yaml"

  nvidia-gpu-operator:
    name: "nvidia-gpu-operator"
    namespace: "gpu-operator"
    chart: "nvidia/gpu-operator"
    enabled: false
    version: "1.9.1"
    group: "prod"
