# context: minikube
# settings:
#   kubeContext: minikube
#   # username = "admin"
#   # password = "$K8S_PASSWORD"
#   # clusterURI = "https://192.168.99.100:8443"
# settings:
#   # kubeContext: "config" # the name of the context to be created
#   # bearerToken: true
#   # clusterURI: "https://kubernetes.default"
#   # # bearerTokenPath: "/path/to/custom/bearer/token/file"
#   kubeContext: "internal"
#   clusterURI: "https://kubernetes.default"
#   bearerToken: true
#   bearerTokenPath: "/var/run/secrets/kubernetes.io/serviceaccount/token" # optional if a token is provided by the user in another location

# settings:
#   globalHooks:
#     preInstall: "persistentVolumes/biostudies.yaml"

metadata:
  organization: EBI
  maintainer: Craig Russell (ctr26@ebi.ac.uk)
  description: EBI hub deployment

helmRepos:
  jupyterhub: "https://jupyterhub.github.io/helm-chart/"
  daskgateway: "https://dask.org/dask-gateway-helm-repo/"

appsTemplates:
  binderhub: &binderhub
    name: "binderhub"
    chart: "jupyterhub/binderhub"
    # version: "0.2.0-n519.hf5c1a19"
    version: "0.2.0-n217.h35366ea"
    # version: "0.2.0-n217.h35366ea"
    # helmFlags:
    #   - "--debug"
    # # test: true
    # # protected: true
    wait: false # Lethal for binderhub
    timeout: 1200
    enabled: true
    set:
      registry.username: "$CI_REGISTRY_USER"
      registry.password: "$CI_REGISTRY_PASSWORD"
      jupyterhub.hub.services.binder.apiToken: "$SECRET_JUPYTERHUB_PROXY_TOKEN"
      jupyterhub.proxy.secretToken: "$SECRET_BINDERHUB_SERVICE"
      config.BinderHub.image_prefix: "$CI_REGISTRY_IMAGE"
      config.GitHubRepoProvider.access_token: "$SECRET_GITHUBREPOPROVIDER"
      # config.BinderHub.image_prefix: "$CI_REGISTRY_IMAGE"
      # config.BinderHub.hub_url: "$HOST_NAME/binderhub/"
    # hooks:
      # preUpgrade: "binderhub/persistentVolumes/biostudies.yaml"
    # hub_url: http://10.43.114.27
    # config.DockerRegistry.url: "https://dockerhub.ebi.ac.uk"
    # config.DockerRegistry.token_url: ""
    # registry.url: "https://dockerhub.ebi.ac.uk"

  jupyterhub: &jupyterhub
    name: "jupyterhub"
    chart: "jupyterhub/jupyterhub"
    version: "0.10.2-n047.hb387f987"
    helmFlags:
      - "--debug"
    # test: true
    # protected: true
    wait: false
    timeout: 1200
    enabled: true
    set:
      proxy.secretToken: "$SECRET_JUPYTERHUB_PROXY_TOKEN"
      auth.github.clientId: "$SECRET_GITHUB_CLIENTID"
      auth.github.clientSecret: "$SECRET_GITHUB_CLIENTSECRET"
    hooks:
      preUpgrade: "persistentVolumes/biostudies.yaml"

  dask: &dask
    name: "daskgateway"
    chart: "daskgateway/dask-gateway"
    version: "0.9.0"
    enabled: true
    priority: 0
    timeout: 120

apps:
  # daskgateway-staging:
  #   <<: *dask
  #   name: "daskgateway-staging"
  #   group: "staging"
  #   namespace: "daskgateway-staging"
  #   # valuesFiles:
  #   # - "daskgateway/staging.yaml"

  daskgateway-production:
    <<: *dask
    name: "daskgateway-production"
    group: "production"
    namespace: "daskgateway-production"
    # valuesFiles:
    # - "daskgateway/production.yaml"

  binderhub-staging:
    <<: *binderhub
    name: "binderhub-staging"
    namespace: "binderhub-staging"
    group: "staging"
    # protected: false
    valuesFiles:
      # - "binderhub/secret.yaml"
      - "binderhub/config.yaml"
      # - "binderhub/secret.yaml"
      - "binderhub/staging/config.yaml"
      # - "binderhub/ebi_dockerhub.yaml"
    # set:
    #   config.BinderHub.base_url: "staging"
    #   ingress.pathSuffix: "/staging"
    #   registry.username: "$SECRET_DOCKERHUB_USERNAME"
    #   registry.password: "$SECRET_DOCKERHUB_PASSWORD"
    # set:
    #   jupyterhub.hub.baseUrl: "/binderhub/staging/"
    #   config.BinderHub.hub_url: "$HOST_NAME"

  binderhub-production:
    <<: *binderhub
    name: "binderhub-production"
    namespace: "binderhub-production"
    group: "production"
    valuesFiles:
      - "binderhub/config.yaml"
      - "binderhub/production/config.yaml"
      # - "binderhub/secret.yaml"
      # - "binderhub/staging.yaml"
      # - "binderhub/ebi_dockerhub.yaml"
      # - "binderhub/production.yaml"

  # binderhub-production:
  #   <<: *binderhub
  #   name: "binderhub-production"
  #   namespace: "binderhub-production"
  #   group: "production"
  #   valuesFiles:
  #     - "binderhub/config.yaml"
  #     # - "binderhub/secret.yaml"
  #     # - "binderhub/staging.yaml"
  #     # - "binderhub/ebi_dockerhub.yaml"
  #     # - "binderhub/production.yaml"

  jupyterhub-sandbox-staging:
    <<: *jupyterhub
    name: "jupyterhub-sandbox-staging"
    group: "staging"
    namespace: "jupyterhub-sandbox-staging"
    # hooks:
    #   preInstall: "jupyterhub/staging/volumes/biostudies.yaml"
    valuesFiles:
      - "jupyterhub/config.yaml"
      - "jupyterhub/staging/config.yaml"
      - "jupyterhub/sandbox.yaml"
      - "jupyterhub/staging/sandbox.yaml"

  jupyterhub-sandbox-production:
    <<: *jupyterhub
    name: "jupyterhub-sandbox-production"
    group: "production"
    namespace: "jupyterhub-sandbox-production"
    # hooks:
    #   preInstall: "jupyterhub/production/volumes/biostudies.yaml"
    valuesFiles:
      - "jupyterhub/config.yaml"
      - "jupyterhub/production/config.yaml"
      - "jupyterhub/sandbox.yaml"
      - "jupyterhub/production/sandbox.yaml"
  # -------------------- JUNK ----------------------------------
  # jupyterhub-test:
  #   valuesFiles:
  #     - "values/jupyterhub-config.yaml"
  #     # - "values/staging/jupyterhub-config.yaml"
  #     - "values/jupyterhub-sandbox.yaml"
  #     # - "values/staging/jupyterhub-sandbox.yaml"
  #   name: "jupyterhub-staging"
  #   namespace: "staging"
  #   chart: "jupyterhub/jupyterhub"
  #   # version: "0.9.0"
  #   version: "0.10.2-n047.hb387f987"
  #   enabled: true
  #   priority: 0
  #   timeout: 1200
  #   # wait: true
  #   set:
  #     proxy.secretToken: "$SECRET_JUPYTERHUB_PROXY_TOKEN"

  jupyterhub-github-staging:
    <<: *jupyterhub
    name: "jupyterhub-github-staging"
    group: "staging"
    namespace: "jupyterhub-github-staging"
    set:
      auth.github.callbackUrl: "$HOST_NAME/staging/github/hub/oauth_callback"
    valuesFiles:
      - "jupyterhub/config.yaml"
      - "jupyterhub/github.yaml"
      - "jupyterhub/staging/github.yaml"

  jupyterhub-github-production:
    <<: *jupyterhub
    name: "jupyterhub-github-production"
    group: "production"
    namespace: "jupyterhub-github-production"
    set:
      auth.github.callbackUrl: "$HOST_NAME/github/hub/oauth_callback"
    valuesFiles:
      - "jupyterhub/config.yaml"
      - "jupyterhub/github.yaml"
      - "jupyterhub/production/github.yaml"
# -------------------- JUNK ----------------------------------
# jupyterhub-test:
#   valuesFiles:
#     - "values/jupyterhub-config.yaml"
#     # - "values/staging/jupyterhub-config.yaml"
#     - "values/jupyterhub-sandbox.yaml"
#     # - "values/staging/jupyterhub-sandbox.yaml"
#   name: "jupyterhub-staging"
#   namespace: "staging"
#   chart: "jupyterhub/jupyterhub"
#   # version: "0.9.0"
#   version: "0.10.2-n047.hb387f987"
#   enabled: true
#   priority: 0
#   timeout: 1200
#   # wait: true
#   set:
#     proxy.secretToken: "$SECRET_JUPYTERHUB_PROXY_TOKEN"

# binderhub:
#   valuesFiles:
#     - "binderhub/secret.yaml"
#     - "binderhub/config.yaml"
#     - "binderhub/production.yaml"
#   name: "binderhub"
#   namespace: "staging"
#   protected: true
#   chart: "jupyterhub/binderhub"
#   version: "0.2.0-n361.h6f57706"
#   enabled: true
#   priority: 0
#   # set:
