# binderhub:
replicas: 1
pdb:
  minAvailable: 1

resources:
  requests:
    cpu: "1"
    memory: 2Gi
  limits:
    cpu: "2"
    memory: 3Gi
config:
  BinderHub:
    template_path: /etc/binderhub/custom/binderhub/frontend-custom/template
    extra_static_path: /etc/binderhub/custom/binderhub/frontend-custom/static
    extra_static_url_prefix: /extra_static/
    template_variables:
        EXTRA_STATIC_URL_PREFIX: "/extra_static/"
    auth_enabled: false
    build_memory_limit: "8G"
    build_memory_request: "4G"
    # hub_url: http://10.43.114.27
    # hub_url: http://binder.bioimagearchive.org/binderhub/
    use_registry: true
    image_prefix: bioimagearchive/binder-
    build_image: jupyter/repo2docker:2021.03.0-70.g43891a6
    # build_image: jupyter/repo2docker:2021.01.0-35.gb6e451d

    banner_message: |
      <div style="text-align: center;">This is a public Beta and liable to downtime</div>
    # build_image: "aicrowd/repo2docker"
    # build_image: "aicrowd/repo2docker:latest"
    # base_url: "/staging" #Doesn't work
    # networkPolicy:
    #   enabled: true
#     # Good until this:
cors: &cors
  allowOrigin: '*'

jupyterhub:
  cull:
    users: True
  custom:
    binderauth_enabled: false
    cors: *cors
  hub:
    config:
      GitHubOAuthenticator:
        admin_users:
          - ctr26
        allowed_organizations:
          - bioimagearchive
        scope:
          - read:user
    baseUrl: /binderhub
    networkPolicy:
      enabled: true
  ingress:
    enabled: true
    hosts:
      - ""
      - localhost
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 2m
  singleuser:
    # cmd: jupyterhub-singleuser
    cpu:
      limit: 2
      guarantee: 1
    memory:
      limit: 6G
      guarantee: 1G
  #   storage:
  #     type: none
  #     extraVolumes:
  #       - name: nfs-bs-ftp
  #         persistentVolumeClaim:
  #           claimName: nfs-bs-ftp-pvc
  #     extraVolumeMounts:
  #       - name: nfs-bs-ftp
  #         mountPath: /home/jovyan/biostudies
      # #     readOnly: true
  # profileList:
  #   - display_name: "GPU Server"
  #     description: "Spawns a notebook server with access to a GPU"
  #     kubespawner_override:
  #       extra_resource_limits:
  #         nvidia.com/gpu: "1"
  #   - display_name: "No GPU"
  #     description: "Spawns a notebook server with access to a GPU"
# proxy:
#   # secretToken:
#   service:
#     type: ClusterIP
#   networkPolicy:
#     enabled: true

# ingress:
#   enabled: true
#   hosts:
#     - ""
#     - localhost

initContainers:
  - name: git-clone-templates
    image: alpine/git:latest
    args:
      - clone
      - --single-branch
      - --branch=master
      - --depth=1
      - --
      - https://github.com/bioimagearchive/k8s-jupyterhub
      - /etc/binderhub/custom
    securityContext:
      runAsUser: 0
    volumeMounts:
      - name: custom-templates
        mountPath: /etc/binderhub/custom
extraVolumes:
  - name: custom-templates
    emptyDir: {}
extraVolumeMounts:
  - name: custom-templates
    mountPath: /etc/binderhub/custom

dind:
  enabled: true
  resources:
    requests:
      cpu: "1"
      memory: 4Gi
    limits:
      cpu: "2"
      memory: 6Gi

ingress:
  enabled: true
  hosts:
    - ""
    - "localhost"
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    cert-manager.k8s.io/acme-challenge-type: http01
    cert-manager.io/cluster-issuer: letsencrypt-production
    https:
      enabled: true
      type: nginx
  tls:
    - secretName: binder-bioimagearchive-org-cert
      hosts:
        - binder.bioimagearchive.org

service:
  type: ClusterIP
