# binderhub:
replicas: 1
resources:
  requests:
    cpu: "1"
    memory: 4Gi
  limits:
    cpu: "2"
    memory: 6Gi
config:
  BinderHub:
    cors_allow_origin: "*"
    template_path: /etc/binderhub/custom/binderhub/frontend-custom/template
    extra_static_path: /etc/binderhub/custom/binderhub/frontend-custom/static
    extra_static_url_prefix: /extra_static/
    template_variables:
      EXTRA_STATIC_URL_PREFIX: "/extra_static/"
    auth_enabled: false
    build_memory_limit: "8G"
    build_memory_request: "4G"
    # hub_url: http://10.43.114.27
    hub_url: https://binder.bioimagearchive.org/jupyter
    use_registry: true
    image_prefix: bioimagearchive/binder-
    build_image: jupyter/repo2docker:2021.08.0
    # build_image: jupyter/repo2docker:2021.01.0-35.gb6e451d

    banner_message: |
      <div style="text-align: center;">This is a public Beta and liable to downtime</div>

jupyterhub:
  scheduling:
    userScheduler:
      enabled: false
  nameOverride: binder
  fullnameOverride: binder
  proxy:
    service:
      type: ClusterIP
      # cull:
    # users: True
  # custom:
  # binderauth_enabled: false
  ingress:
    enabled: true
    hosts:
    - binder.bioimagearchive.org
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 2m
  hub:
    config:
      BinderSpawner:
        cors_allow_origin: '*'
      singleuser:
        extraEnv:
          GRANT_SUDO: "yes"
          JUPYTERHUB_SINGLEUSER_APP: "jupyterhub.singleuserapp.SingleUserNotebookApp"
          NOTEBOOK_ARGS: "--allow-root"
        cpu:
          limit: 4
          guarantee: 2
        memory:
          limit: 8G
          guarantee: 6G
    baseUrl: /jupyter
    networkPolicy:
      enabled: true

initContainers:
- name: git-clone-templates
  image: alpine/git:latest
  args:
  - clone
  - --single-branch
  - --branch=master
  - --depth=1
  - --
  - https://github.com/BioImage-Archive/bia-binder
  - /etc/binderhub/custom
  securityContext:
    runAsUser: 0
  volumeMounts:
  - name: custom-templates
    mountPath: /etc/binderhub/custom
extraVolumes:
- name: custom-templates
  emptyDir: {}
extraVolumeMounts:
- name: custom-templates
  mountPath: /etc/binderhub/custom

imageBuilderType: pink
# Podman in Kubernetes
pink:
  hostStorageDir: /var/lib/pink/storage/production
  hostSocketDir: /var/run/pink/production

ingress:
  enabled: true
  hosts:
  - "binder.bioimagearchive.org"
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    # Because we're using http01 we need to not use wildcard tls
    # https://letsencrypt.org/docs/faq/
    cert-manager.io/cluster-issuer: letsencrypt-production
    certmanager.k8s.io/acme-http01-edit-in-place: "true"
  https:
    enabled: true
    type: nginx
  tls:
  - secretName: binder-bioimagearchive-org-cert
    hosts:
    - binder.bioimagearchive.org

service:
  type: ClusterIP
