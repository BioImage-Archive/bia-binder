# binderhub:
#   config:
#     BinderHub:
#       debug: true
#       base_url: /
#       hub_url: "persist.binder.bioimagearchive.org"
#       image_prefix: ""
#       use_registry: true
#       build_image: jupyter/repo2docker:0.10.0
#   jupyterhub:
#     hub:
#   #     config:
#   #       # GitHubOAuthenticator:
#   #       #   client_id:
#   #       #   client_secret:
#   #       #   oauth_callback_url: https://binder.bioimagearchive.org/hub/oauth_callback
#   #       JupyterHub:
#   #         authenticator_class: dummy
#   #     services:
#   #       binder:
#   #         oauth_client_id: "binder-oauth-client-dev"
#   #         url: "https://persist.binder.bioimagearchive.org"
#   #         apiToken: "b32f6db83b52afec0099e1154fdc852d053b36f724e03d657f38baf46334a662"
#   #         oauth_redirect_uri: "https://persist.binder.bioimagearchive.org/services/binder/oauth_callback"
#     proxy:
#       secretToken: "***REMOVED***"
#   registry:
#     username:
#     password:

#   ingress:
#     enabled: true
#     hosts:
#       - "persist.binder.bioimagearchive.org"
#     annotations:
#       kubernetes.io/ingress.class: nginx
#       kubernetes.io/tls-acme: "true"
#       # cert-manager.k8s.io/acme-challenge-type: http01
#       # cert-manager.io/cluster-issuer: letsencrypt-production
#       https:
#         enabled: true
#         type: nginx
#     # tls:
#     #   - secretName: persist-binder-bioimagearchive-org-cert
#     #     hosts:
#     #       - persist.binder.bioimagearchive.org



binderhub:
  replicas:
    1
  dind:
    # enabled: true
    hostLibDir: /var/lib/dind/production/login
    hostSocketDir: /var/run/dind/production/login
    enabled: true
    resources:
      requests:
        cpu: "2"
        memory: 4Gi
      limits:
        cpu: "4"
        memory: 6Gi
  ingress:
    enabled: false
  service:
    type: ClusterIP
  config:
    BinderHub:
      auth_enabled: true
      debug: true
      # base_url: /
      hub_url: "https://login.binder.bioimagearchive.org/"
      # use only local docker images
      image_prefix: ""
      use_registry: true
      # build_image: jupyter/repo2docker:0.10.0
  jupyterhub:
    cull:
      # don't cull authenticated users
      users: False
    custom:
      binderauth_enabled: true
    hub:
      extraConfig:
          fuseConfig: |
            from kubernetes import client
            def modify_pod_hook(spawner, pod):
              pod.spec.containers[0].security_context = client.V1SecurityContext(
                privileged=True,
                capabilities=client.V1Capabilities(
                    add=['SYS_ADMIN']
                )
              )
              return pod
            c.KubeSpawner.modify_pod_hook = modify_pod_hook
      allowNamedServers: true
      # change this value as you wish,
      # or remove this line if you don't want to have any limit
      namedServerLimitPerUser: 5
      singleuser:
        # to make notebook servers aware of hub
        cmd: jupyterhub-singleuser
      redirectToServer: false
      baseUrl: /
      config:
        GitHubOAuthenticator:
          client_id: ***REMOVED***
          client_secret: ***REMOVED***
          oauth_callback_url: https://login.binder.bioimagearchive.org/hub/oauth_callback
        JupyterHub:
          authenticator_class: github
      services:
        binder:
          # this is the default value
          oauth_no_confirm: true
          oauth_client_id: "binder-oauth-client-dev"
          url: "http://binder"
          apiToken: "b32f6db83b52afec0099e1154fdc852d053b36f724e03d657f38baf46334a662"
          oauth_redirect_uri: "https://login.binder.bioimagearchive.org/services/binder/oauth_callback"
    ingress:
      enabled: true
      hosts:
        - "login.binder.bioimagearchive.org"
      tls:
        - secretName: login-binder-bioimagearchive-org-cert
          hosts:
            - login.binder.bioimagearchive.org
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
        cert-manager.k8s.io/acme-challenge-type: http01
        cert-manager.io/cluster-issuer: letsencrypt-production
        https:
          enabled: true
          type: nginx
    proxy:
      secretToken: "***REMOVED***"
      service:
        type: ClusterIP
  # registry:
  #   username:
  #   password:


    # tls:
    #   - secretName: persist-binder-bioimagearchive-org-cert
    #     hosts:
    #       - persist.binder.bioimagearchive.org
